{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","categories","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setstate","useEffect","console","log","then","imgs","useFetchGifs","GifExpertApp","ReactDOM","render","document","getElementById"],"mappings":"mMAGaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EAEVC,mBAAS,IAFC,mBAEvCC,EAFuC,KAE3BC,EAF2B,KAiB9C,OACE,sBAAMC,SAVa,SAACC,GACpBA,EAAEC,iBAEEJ,EAAWK,OAAOC,OAAS,IAC7BR,GAAgB,SAAAS,GAAU,OAAKP,GAAL,mBAAoBO,OAC9CN,EAAc,MAKhB,SACE,uBACEO,KAAK,OACLC,MAAST,EACTU,SAlBoB,SAACP,GACzBF,EAAcE,EAAEQ,OAAOF,a,+BCRdG,EAAO,uCAAG,WAAMC,GAAN,uBAAAC,EAAA,6DACfC,EADe,kGACiFC,UAAWH,IAD5F,SAEFI,MAAOF,GAFL,cAEfG,EAFe,gBAGEA,EAAKC,OAHP,uBAGbC,EAHa,EAGbA,KAEFC,EAAOD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EAC5B,MAAO,CACLC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAACQ,EAAIG,cAAL,aAAC,EAAYC,iBAAiBZ,QAThB,kBAadM,GAbc,4CAAH,sDCEPO,EAAc,SAAC,GAAoB,IAAlBH,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IACnC,OACE,sBAAKc,UAAU,uBAAf,UACE,qBAAKC,IAAQf,EAAMgB,IAAMN,IACzB,kCAAMA,EAAN,WCDOO,EAAU,SAAC,GAAkB,IAAhBnB,EAAe,EAAfA,SAAe,ECFb,SAAEA,GAAe,IAAD,EAEhBd,mBAAS,CACjCqB,KAAK,GACLa,SAAQ,IAJgC,mBAEnCC,EAFmC,KAE5BC,EAF4B,KAkB1C,OAXAC,qBAAU,WACRC,QAAQC,IAAIzB,GACZD,EAASC,GACN0B,MAAM,SAAAC,GACLL,EAAS,CACPf,KAAMoB,EACNP,SAAS,SAGd,CAAEpB,IAEEqB,EDdwBO,CAAc5B,GAAlCa,EAF4B,EAEjCN,KAAaa,EAFoB,EAEpBA,QAErB,OACI,qCACE,6BAAMpB,IAEJoB,GAAW,wCAEb,qBAAKJ,UAAU,YAAf,SAEIH,EAAOJ,KAAI,SAACC,GAAD,OACT,cAAC,EAAD,eAA8BA,GAAZA,EAAIC,aEdrBkB,EAAe,WAAM,MAII3C,mBAAS,CAAC,cAJd,mBAIzBQ,EAJyB,KAIbT,EAJa,KAUhC,OACE,qCACE,8CACA,cAAC,EAAD,CACEA,cAAkBA,IAEpB,uBAIA,6BAEIS,EAAWe,KAAI,SAACT,GAAD,OACb,cAAC,EAAD,CAASA,SAAUA,GAAeA,Y,MCpB9C8B,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.c87656d0.chunk.js","sourcesContent":["import React, { useState} from 'react'\nimport PropTypes from 'prop-types'\n\nexport const AddCategory = ({setCategories}) => {\n  \n  const [inputValue, setInputValue] = useState('')\n  \n  const handleInputChange = (e) => {\n    setInputValue(e.target.value)\n  }\n\n  const handleSubmit = (e) => {\n    e.preventDefault()\n\n    if (inputValue.trim().length > 2 ){\n      setCategories ( categories => [inputValue, ...categories])\n      setInputValue('')\n    }\n  }\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <input \n        type=\"text\"\n        value = {inputValue}\n        onChange = { handleInputChange }\n      />\n    </form>\n  )\n}\n\nAddCategory.propTypes = {\n  setCategories:PropTypes.func.isRequired\n}\n","export const getGifs = async(category) => {\n  const url =`http://api.giphy.com/v1/gifs/search?api_key=Nb8lyUh8XNjqPYB8awcUL6Jw93827QG9&limit=10&q=${encodeURI( category )}`\n  const resp = await fetch( url );\n  const { data } = await resp.json();\n\n  const gifs = data.map( img => {\n    return {\n      id: img.id,\n      title: img.title,\n      url:img.images?.downsized_medium.url\n    }\n  })\n\n  return gifs;\n}","import React from 'react'\n\nexport const GifGridItem = ({ title, url} ) => {\n  return (\n    <div className=\"card animate__fadeIn\">\n      <img src = { url } alt={ title } />\n      <p> { title } </p>\n    </div>\n  )\n}\n","import React from 'react'\nimport { useFetchGifs } from '../hooks/useFetchGifs'\n\nimport { GifGridItem } from './GifGridItem'\n\nexport const GifGrid = ({ category }) => {\n\nconst { data:images, loading } = useFetchGifs( category )\n\nreturn (\n    <>\n      <h3>{ category }</h3>\n\n      { loading && <p>Loading</p>}\n\n      <div className=\"card-grid\">\n        {\n          images.map((img) => (\n            <GifGridItem key={img.id} {...img} />\n          ))\n        }\n        \n      </div>\n    </>\n  )\n}\n","import { useState, useEffect } from 'react'\nimport { getGifs } from '../helpers/getGifs'\n\nexport const useFetchGifs = ( category ) => {\n\n  const [state, setstate] = useState({\n    data:[],\n    loading:true\n  })\n\n  useEffect(() => {\n    console.log(category)\n    getGifs( category )\n      .then( imgs => {\n        setstate({\n          data: imgs,\n          loading: false\n        })\n      })\n  }, [ category ])\n\n  return state;\n\n}","import React, { useState } from 'react'\nimport {AddCategory} from './components/AddCategory'\nimport { GifGrid } from './components/GifGrid'\n\nexport const GifExpertApp = () => {\n  \n  // const categories = ['One Punch', 'Samurai X', 'Dragon Ball'];\n  \n  const [categories, setCategories] = useState(['One Punch'])\n\n  // const handleAdd = (e) => {\n  //   setCategories([...categories, 'HunterxHunter']);\n  // }\n\n  return (\n    <>\n      <h2>GifExpertApp</h2>\n      <AddCategory \n        setCategories = { setCategories }\n      />\n      <hr />\n\n      {/* <button onClick={handleAdd}>Agregar</button> */}\n      \n      <ol>\n        {\n          categories.map((category) => \n            <GifGrid category={category} key={category}/>\n          )\n        }\n      </ol> \n    </>\n  )\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { GifExpertApp } from './GifExpertApp';\n\nimport './index.css';\n\nReactDOM.render(\n  <GifExpertApp />,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}